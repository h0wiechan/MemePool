{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/jqueery.js","webpack:///./lib/node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,uBAAuB,mBAAO,CAAC,mDAAmB;;AAElD;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,gD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA,gBAAgB;AAChB,wDAAwD;AACxD;AACA;AACA;AACA,yCAAyC;AACzC,gDAAgD;AAChD,mDAAmD,qBAAqB;;AAExE;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,IAAI,GAAG,UAAU;AACtE;AACA;AACA;;;;;;;;;;;;;AClEA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,S;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB;AACpB,gBAAgB;AAChB,Y;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA,4B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iB;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iB;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,MAAM;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,8CAA8C,MAAM;AACpD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;;AAEA,gC","file":"./bundle-jqueery.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/jqueery.js\");\n","const NodeCollection = require(\"./node_collection\");\n\nlet _ready = false;\nconst _callbacksOnReady = [];\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    _ready = true;\n    _callbacksOnReady.forEach(callback => callback());\n});\n\nwindow.$$ = (argument) => {\n    switch (typeof argument) {\n        case \"string\":\n            const nodes = document.querySelectorAll(argument);\n            const nodesArr = Array.from(nodes);\n            return new NodeCollection(nodesArr);  \n        case \"object\":\n            if (argument instanceof HTMLElement || argument instanceof Document) return new NodeCollection([argument]);\n        case \"function\":\n            _ready ? argument() : _callbacksOnReady.push(argument);\n    }\n};\n    // typeof => built-in data types (always return Object for custom data types)\n    // instanceof => custom/complex data types (Array, Object)\n    \n$$.extend = (firstObject, ...objects) => {\n    objects.forEach((object) => {\n        for (let key in object) {\n            firstObject[key] = object[key];\n        }\n    });\n    return firstObject;\n};\n\n$$.ajax = (object) => {\n    const defaults = { // setting default state of object with required props\n        method: \"GET\",\n        url: \"\",\n        data: {},\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n        success: () => console.log(\"AJAX request fired\"),\n        error: () => console.log(\"AJAX Error\"),\n    }\n    object = $$.extend(defaults, object); // merging defaults and argument\n    object.method = object.method.toUpperCase(); // remove case sensitivity\n    if (object.method === \"GET\") object.url += `?${querify(object.data)}`;\n    \n    const xhr = new XMLHttpRequest();\n    xhr.open(object.method, object.url, true); // XMLHttpRequest.open(method, url, async)\n    xhr.onload = (e) => {\n        if (xhr.status === 200) {\n            object.success(xhr.response);\n        } else {\n            object.error(xhr.response);\n        }\n    };\n\n    xhr.send(JSON.stringify(object.data));\n}\n\nfunction querify(data) {\n    let queryStr = \"\";\n    for (let key in data) {\n        if (data.hasOwnProperty(key)) queryStr += `${key}=${data[key]}&`;\n    }\n    return queryStr.slice(0, -1);\n}\n\n","class NodeCollection {\n    constructor(nodes) {\n        this.nodes = nodes; // htmlEls: an array of HTML Elements\n        // this.length = this.nodes.length;\n    }\n\n    each(callback) {\n        this.nodes.forEach(callback);\n    }\n\n    html(argument) {\n        if (typeof argument === \"string\") {\n            this.each((node) => node.innerHTML = argument) \n        } else {\n            return this.nodes[0].innerHTML;\n        }\n    }\n\n    val(newValue) {\n        if (newValue) {\n            this.nodes[0].value = newValue;\n        } else {\n            return this.nodes.length > 0 ? this.nodes[0].value : null;\n        }\n    }\n\n    empty() {\n        this.html(\"\");\n    }\n\n    append(newNodes) {\n        if (this.nodes.length === 0) {\n            return ;\n        } else if (typeof newNodes === \"object\" && !(newNodes instanceof NodeCollection)) {\n            newNodes = $l(newNodes);\n        }\n\n        if (typeof newNodes === \"string\") {\n            this.each((node) => {\n                node.innerHTML += newNodes;\n            });\n        } else if (newNodes instanceof NodeCollection) {\n            this.each((node) => {\n                newNodes.each((newNode) => {\n                    node.appendChild(newNode.cloneNode(true));\n                });\n            });\n        } \n        \n    }\n\n    // prepend(newNodes) {\n    //     if (this.nodes.length === 0) {\n    //         return ;\n    //     } else if (typeof newNodes === \"object\" && !(newNodes instanceof NodeCollection)) {\n    //         newNodes = $l(newNodes);\n    //     }\n\n    //     if (typeof newNodes === \"string\") {\n    //         this.each((node) => {\n    //             node.innerHTML = newNodes + node.innerHTML;\n    //         });\n    //     } else if (newNodes instanceof NodeCollection) {\n    //         this.each((node) => {\n    //             newNodes.each((newNode) => {\n    //                 node.insertBefore(newNode.cloneNode(true), node.children()[0]);\n    //             });\n    //         });\n    //     } \n    // }\n\n    remove(selector = null) {\n        if (!selector) {\n            this.each(node => {\n                node.parentNode.removeChild(node)\n            });\n        } else {\n            this.children().each(child => {\n                const node = document.querySelector(selector);\n                if (child === node) $$(selector).remove();\n            });\n            // when selector is provided\n        }\n    }\n\n    attr(attribute, value) { \n        if (!value) {\n            return this.nodes[0].getAttribute(attribute)\n        } else {\n            this.each(node => node.setAttribute(attribute, value.toString()))\n        }\n    }\n\n    addClass(newClass) {\n        if (typeof newClass === \"number\" || (typeof newClass === \"object\" && !(newClass instanceof Array))) return;\n        if (newClass instanceof Array) {\n            for (let i = 0; i < newClass.length; i++) {\n                const el = newClass[i];\n                if (el instanceof Array) {\n                    return addClass(el);\n                } else if (typeof el === \"object\") {\n                    this.each(node => node.classList.add(\"[Object]\"));\n                } else {\n                    this.each(node => node.classList.add(el.toString()));\n                }   \n            }\n        } else {\n            this.each((node) => node.classList.add(newClass))\n        }\n    }\n    // Get the value of an attribute for the first element \n    // in the set of matched elements or set one or more \n    // attributes for every matched element.\n    removeClass(klass) {\n        if (typeof klass === \"number\" || (typeof klass === \"object\" && !(klass instanceof Array))) return;\n        if (klass instanceof Array) {\n            for (let i = 0; i < klass.length; i++) {\n                const el = klass[i];\n                if (el instanceof Array) {\n                    return this.removeClass(el);\n                } else if (typeof el === \"object\") {\n                    this.each(node => node.classList.remove(\"[Object]\"));\n                } else {\n                    this.each(node => node.classList.remove(el.toString()));\n                }   \n            }\n        } else {\n            this.each((node) => node.classList.remove(klass))\n        }\n    }\n\n    toggleClass(klass) {\n        if (typeof klass === \"number\" || (typeof klass === \"object\" && !(klass instanceof Array))) return;\n        if (klass instanceof Array) {\n            for (let i = 0; i < klass.length; i++) {\n                const el = klass[i];\n                if (el instanceof Array) {\n                    return toggleClass(el);\n                } else if (typeof el === \"number\" || typeof el === \"object\") {\n                    continue;\n                } else {\n                    this.each(node => node.classList.toggle(el));\n                }   \n            }\n        } else {\n            this.each((node) => node.classList.toggle(klass))\n        }\n    }\n\n    children() {\n        let children = [];\n        this.each((node) => {\n            const childrenNodes = node.children;\n            children = children.concat(Array.from(childrenNodes));\n        });\n        return new NodeCollection(children);\n    }\n\n    parent(){\n        let parentNodeArr = [];\n        this.nodes.forEach((node) => {\n          if(!parentNodeArr.includes(node.parentNode)){\n            parentNodeArr.push(node.parentNode);\n          }\n        });\n        return new NodeCollection(parentNodeArr);\n    }\n\n    find(selector) {\n        let targets = [];\n        this.each((node) => {\n            const nodes = node.querySelectorAll(selector);\n            targets = targets.concat(Array.from(nodes));\n        });\n        return new NodeCollection(targets);\n    }\n\n    on(event, callback) {\n        this.each((node) => {\n            node.addEventListener(event, callback);\n            const eventKey = `jqueeryEvents-${event}`;\n            if (typeof node[eventKey] === \"undefined\") {\n                node[eventKey] = [];\n            }\n            node[eventKey].push(callback);\n        });\n    }\n\n    off(event) {\n        this.each((node) => {\n            const eventKey = `jqueeryEvents-${event}`;\n            if (node[eventKey]) {\n                node[eventKey].forEach((callback) => {\n                    node.removeEventListener(event, callback);\n                });\n            }\n            node[eventKey] = [];\n        });\n    }\n}\n\nmodule.exports = NodeCollection;"],"sourceRoot":""}